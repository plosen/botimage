import telebot
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

API_TOKEN = '8047776117:AAHbhIHrp_qY1egwP1_LZrMG4oTILDsRF9I'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(API_TOKEN)

# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
winners = []
prizes = ["prize1.png", "prize2.png", "prize3.png"]  # –ü—Ä–∏–∑–æ–≤—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏


@bot.message_handler(commands=['start'])
def start_command_handler(message: telebot.types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑".
    """
    markup = telebot.types.InlineKeyboardMarkup()
    button = telebot.types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑", callback_data="get_prize")
    markup.add(button)

    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑!", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == "get_prize")
def callback_query(call: telebot.types.CallbackQuery):
    user_id = call.message.chat.id

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑
        if len(winners) < 3:
            # –ï—Å–ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –º–µ–Ω—å—à–µ 3, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user_id not in winners:
                winners.append(user_id)
                # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∏–∑ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                prize_img = prizes[len(winners) - 1]  # –ü—Ä–∏–∑ –¥–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –ø–æ –ø–æ—Ä—è–¥–∫—É

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –ø—Ä–∏–∑–∞
                with open(f'img/{prize_img}', 'rb') as photo:
                    bot.send_photo(user_id, photo, caption="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–∑!")
                bot.answer_callback_query(call.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –ø–æ–ª—É—á–∏—à—å –ø—Ä–∏–∑!")

                logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–∑!")
            else:
                bot.send_message(user_id, "–¢—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–∑!")
                bot.answer_callback_query(call.id, "–¢—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–∑!")
        else:
            bot.send_message(user_id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å–µ –ø—Ä–∏–∑—ã —É–∂–µ —Ä–∞–∑–¥–∞–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!")
            bot.answer_callback_query(call.id, "–ü—Ä–∏–∑—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!")
            logging.info(f"–í—Å–µ –ø—Ä–∏–∑—ã —É–∂–µ —Ä–∞–∑–¥–∞–Ω—ã. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–∑.")
    except Exception as e:
        bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /rating, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –ø—Ä–∏–∑–∞–º
@bot.message_handler(commands=['rating'])
def handle_rating(message: telebot.types.Message):
    if winners:
        res = [f'| @{user_id:<11} | 1 –ø—Ä–∏–∑    |' for user_id in winners]
        res = '\n'.join(res)
        res = f'|USER_ID      |COUNT_PRIZE|\n{"_"*26}\n' + res
        bot.send_message(message.chat.id, res)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π.")


@bot.message_handler(commands=['help'])
def help_command_handler(message: telebot.types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–º–æ—â–∏.
    """
    bot.send_message(message.chat.id, "‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n"
                                      "üí¨ –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!\n"
                                      "üìß –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –Ω–∞—à—É –ø–æ—á—Ç—É: support@example.com")


@bot.message_handler(commands=['about'])
def about_command_handler(message: telebot.types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about.
    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ.
    """
    bot.send_message(message.chat.id, "ü§ñ –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏.\n"
                                      "üåü –û–Ω –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–∏ —Ä–∞–±–æ—Ç—ã –∏ –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏ —Å –¥—Ä—É–≥–∏–º–∏!\n"
                                      "üöÄ –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å –ª—é–±–æ–≤—å—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!")


@bot.message_handler(commands=['contact'])
def contact_command_handler(message: telebot.types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /contact.
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–≤—è–∑–∏.
    """
    bot.send_message(message.chat.id, "üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑:\n"
                                      "‚úâÔ∏è Email: support@example.com\n"
                                      "üí¨ Telegram: @support_bot\n"
                                      "üì± –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç!")


@bot.message_handler(func=lambda message: True)
def echo_message(message: telebot.types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª.
    """
    bot.send_message(message.chat.id, "üó®Ô∏è –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: " + message.text + "\n"
                                                                          "ü§î –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ /help!")


if __name__ == '__main__':
    bot.polling(none_stop=True)
